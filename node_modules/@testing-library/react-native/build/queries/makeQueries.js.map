{"version":3,"file":"makeQueries.js","names":["makeQueries","queryAllByQuery","getMissingError","getMultipleError","getAllByQuery","instance","getAllFn","predicate","options","results","length","ErrorWithStack","queryByQuery","singleQueryFn","getByQuery","getFn","findAllByQuery","findAllFn","queryOptions","waitForOptions","waitFor","findByQuery","findFn","getBy","getAllBy","queryBy","queryAllBy","findBy","findAllBy"],"sources":["../../src/queries/makeQueries.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport { ErrorWithStack } from '../helpers/errors';\nimport waitFor from '../waitFor';\nimport type { WaitForOptions } from '../waitFor';\n\nexport type GetByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  options?: Options\n) => ReactTestInstance;\n\nexport type GetAllByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  options?: Options\n) => ReactTestInstance[];\n\nexport type QueryByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  options?: Options\n) => ReactTestInstance | null;\n\nexport type QueryAllByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  options?: Options\n) => ReactTestInstance[];\n\nexport type FindByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  options?: Options,\n  waitForOptions?: WaitForOptions\n) => Promise<ReactTestInstance>;\n\nexport type FindAllByQuery<Predicate, Options = void> = (\n  predicate: Predicate,\n  options?: Options,\n  waitForOptions?: WaitForOptions\n) => Promise<ReactTestInstance[]>;\n\ntype UnboundQuery<Query> = (instance: ReactTestInstance) => Query;\n\nexport type UnboundQueries<Predicate, Options> = {\n  getBy: UnboundQuery<GetByQuery<Predicate, Options>>;\n  getAllBy: UnboundQuery<GetAllByQuery<Predicate, Options>>;\n  queryBy: UnboundQuery<QueryByQuery<Predicate, Options>>;\n  queryAllBy: UnboundQuery<QueryAllByQuery<Predicate, Options>>;\n  findBy: UnboundQuery<FindByQuery<Predicate, Options>>;\n  findAllBy: UnboundQuery<FindAllByQuery<Predicate, Options>>;\n};\n\nexport function makeQueries<Predicate, Options>(\n  queryAllByQuery: UnboundQuery<QueryAllByQuery<Predicate, Options>>,\n  getMissingError: (predicate: Predicate) => string,\n  getMultipleError: (predicate: Predicate) => string\n): UnboundQueries<Predicate, Options> {\n  function getAllByQuery(instance: ReactTestInstance) {\n    return function getAllFn(predicate: Predicate, options?: Options) {\n      const results = queryAllByQuery(instance)(predicate, options);\n\n      if (results.length === 0) {\n        throw new ErrorWithStack(getMissingError(predicate), getAllFn);\n      }\n\n      return results;\n    };\n  }\n\n  function queryByQuery(instance: ReactTestInstance) {\n    return function singleQueryFn(predicate: Predicate, options?: Options) {\n      const results = queryAllByQuery(instance)(predicate, options);\n\n      if (results.length > 1) {\n        throw new ErrorWithStack(getMultipleError(predicate), singleQueryFn);\n      }\n\n      if (results.length === 0) {\n        return null;\n      }\n\n      return results[0];\n    };\n  }\n\n  function getByQuery(instance: ReactTestInstance) {\n    return function getFn(predicate: Predicate, options?: Options) {\n      const results = queryAllByQuery(instance)(predicate, options);\n\n      if (results.length > 1) {\n        throw new ErrorWithStack(getMultipleError(predicate), getFn);\n      }\n\n      if (results.length === 0) {\n        throw new ErrorWithStack(getMissingError(predicate), getFn);\n      }\n\n      return results[0];\n    };\n  }\n\n  function findAllByQuery(instance: ReactTestInstance) {\n    return function findAllFn(\n      predicate: Predicate,\n      queryOptions?: Options,\n      waitForOptions?: WaitForOptions\n    ) {\n      return waitFor(\n        () => getAllByQuery(instance)(predicate, queryOptions),\n        waitForOptions\n      );\n    };\n  }\n\n  function findByQuery(instance: ReactTestInstance) {\n    return function findFn(\n      predicate: Predicate,\n      queryOptions?: Options,\n      waitForOptions?: WaitForOptions\n    ) {\n      return waitFor(\n        () => getByQuery(instance)(predicate, queryOptions),\n        waitForOptions\n      );\n    };\n  }\n\n  return {\n    getBy: getByQuery,\n    getAllBy: getAllByQuery,\n    queryBy: queryByQuery,\n    queryAllBy: queryAllByQuery,\n    findBy: findByQuery,\n    findAllBy: findAllByQuery,\n  };\n}\n"],"mappings":";;;;;;;AACA;;AACA;;;;AA8CO,SAASA,WAAT,CACLC,eADK,EAELC,eAFK,EAGLC,gBAHK,EAI+B;EACpC,SAASC,aAAT,CAAuBC,QAAvB,EAAoD;IAClD,OAAO,SAASC,QAAT,CAAkBC,SAAlB,EAAwCC,OAAxC,EAA2D;MAChE,MAAMC,OAAO,GAAGR,eAAe,CAACI,QAAD,CAAf,CAA0BE,SAA1B,EAAqCC,OAArC,CAAhB;;MAEA,IAAIC,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;QACxB,MAAM,IAAIC,sBAAJ,CAAmBT,eAAe,CAACK,SAAD,CAAlC,EAA+CD,QAA/C,CAAN;MACD;;MAED,OAAOG,OAAP;IACD,CARD;EASD;;EAED,SAASG,YAAT,CAAsBP,QAAtB,EAAmD;IACjD,OAAO,SAASQ,aAAT,CAAuBN,SAAvB,EAA6CC,OAA7C,EAAgE;MACrE,MAAMC,OAAO,GAAGR,eAAe,CAACI,QAAD,CAAf,CAA0BE,SAA1B,EAAqCC,OAArC,CAAhB;;MAEA,IAAIC,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAwB;QACtB,MAAM,IAAIC,sBAAJ,CAAmBR,gBAAgB,CAACI,SAAD,CAAnC,EAAgDM,aAAhD,CAAN;MACD;;MAED,IAAIJ,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;QACxB,OAAO,IAAP;MACD;;MAED,OAAOD,OAAO,CAAC,CAAD,CAAd;IACD,CAZD;EAaD;;EAED,SAASK,UAAT,CAAoBT,QAApB,EAAiD;IAC/C,OAAO,SAASU,KAAT,CAAeR,SAAf,EAAqCC,OAArC,EAAwD;MAC7D,MAAMC,OAAO,GAAGR,eAAe,CAACI,QAAD,CAAf,CAA0BE,SAA1B,EAAqCC,OAArC,CAAhB;;MAEA,IAAIC,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAwB;QACtB,MAAM,IAAIC,sBAAJ,CAAmBR,gBAAgB,CAACI,SAAD,CAAnC,EAAgDQ,KAAhD,CAAN;MACD;;MAED,IAAIN,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;QACxB,MAAM,IAAIC,sBAAJ,CAAmBT,eAAe,CAACK,SAAD,CAAlC,EAA+CQ,KAA/C,CAAN;MACD;;MAED,OAAON,OAAO,CAAC,CAAD,CAAd;IACD,CAZD;EAaD;;EAED,SAASO,cAAT,CAAwBX,QAAxB,EAAqD;IACnD,OAAO,SAASY,SAAT,CACLV,SADK,EAELW,YAFK,EAGLC,cAHK,EAIL;MACA,OAAO,IAAAC,gBAAA,EACL,MAAMhB,aAAa,CAACC,QAAD,CAAb,CAAwBE,SAAxB,EAAmCW,YAAnC,CADD,EAELC,cAFK,CAAP;IAID,CATD;EAUD;;EAED,SAASE,WAAT,CAAqBhB,QAArB,EAAkD;IAChD,OAAO,SAASiB,MAAT,CACLf,SADK,EAELW,YAFK,EAGLC,cAHK,EAIL;MACA,OAAO,IAAAC,gBAAA,EACL,MAAMN,UAAU,CAACT,QAAD,CAAV,CAAqBE,SAArB,EAAgCW,YAAhC,CADD,EAELC,cAFK,CAAP;IAID,CATD;EAUD;;EAED,OAAO;IACLI,KAAK,EAAET,UADF;IAELU,QAAQ,EAAEpB,aAFL;IAGLqB,OAAO,EAAEb,YAHJ;IAILc,UAAU,EAAEzB,eAJP;IAKL0B,MAAM,EAAEN,WALH;IAMLO,SAAS,EAAEZ;EANN,CAAP;AAQD"}