{"version":3,"file":"placeholderText.js","names":["getTextInputNodeByPlaceholderText","node","placeholder","options","TextInput","require","exact","normalizer","filterNodeByType","matches","props","error","createLibraryNotSupportedError","queryAllByPlaceholderText","instance","queryAllByPlaceholderFn","queryOptions","findAll","getMultipleError","String","getMissingError","getBy","getAllBy","queryBy","queryAllBy","findBy","findAllBy","makeQueries","bindByPlaceholderTextQueries","getByPlaceholderText","getAllByPlaceholderText","queryByPlaceholderText","findByPlaceholderText","findAllByPlaceholderText"],"sources":["../../src/queries/placeholderText.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport { createLibraryNotSupportedError } from '../helpers/errors';\nimport { filterNodeByType } from '../helpers/filterNodeByType';\nimport { matches, TextMatch } from '../matches';\nimport { makeQueries } from './makeQueries';\nimport type {\n  FindAllByQuery,\n  FindByQuery,\n  GetAllByQuery,\n  GetByQuery,\n  QueryAllByQuery,\n  QueryByQuery,\n} from './makeQueries';\nimport type { TextMatchOptions } from './text';\n\nconst getTextInputNodeByPlaceholderText = (\n  node: ReactTestInstance,\n  placeholder: TextMatch,\n  options: TextMatchOptions = {}\n) => {\n  try {\n    const { TextInput } = require('react-native');\n    const { exact, normalizer } = options;\n    return (\n      filterNodeByType(node, TextInput) &&\n      matches(placeholder, node.props.placeholder, normalizer, exact)\n    );\n  } catch (error) {\n    throw createLibraryNotSupportedError(error);\n  }\n};\n\nconst queryAllByPlaceholderText = (\n  instance: ReactTestInstance\n): ((\n  placeholder: TextMatch,\n  queryOptions?: TextMatchOptions\n) => Array<ReactTestInstance>) =>\n  function queryAllByPlaceholderFn(placeholder, queryOptions) {\n    return instance.findAll((node) =>\n      getTextInputNodeByPlaceholderText(node, placeholder, queryOptions)\n    );\n  };\n\nconst getMultipleError = (placeholder: TextMatch) =>\n  `Found multiple elements with placeholder: ${String(placeholder)} `;\nconst getMissingError = (placeholder: TextMatch) =>\n  `Unable to find an element with placeholder: ${String(placeholder)}`;\n\nconst { getBy, getAllBy, queryBy, queryAllBy, findBy, findAllBy } = makeQueries(\n  queryAllByPlaceholderText,\n  getMissingError,\n  getMultipleError\n);\n\nexport type ByPlaceholderTextQueries = {\n  getByPlaceholderText: GetByQuery<TextMatch, TextMatchOptions>;\n  getAllByPlaceholderText: GetAllByQuery<TextMatch, TextMatchOptions>;\n  queryByPlaceholderText: QueryByQuery<TextMatch, TextMatchOptions>;\n  queryAllByPlaceholderText: QueryAllByQuery<TextMatch, TextMatchOptions>;\n  findByPlaceholderText: FindByQuery<TextMatch, TextMatchOptions>;\n  findAllByPlaceholderText: FindAllByQuery<TextMatch, TextMatchOptions>;\n};\n\nexport const bindByPlaceholderTextQueries = (\n  instance: ReactTestInstance\n): ByPlaceholderTextQueries => ({\n  getByPlaceholderText: getBy(instance),\n  getAllByPlaceholderText: getAllBy(instance),\n  queryByPlaceholderText: queryBy(instance),\n  queryAllByPlaceholderText: queryAllBy(instance),\n  findByPlaceholderText: findBy(instance),\n  findAllByPlaceholderText: findAllBy(instance),\n});\n"],"mappings":";;;;;;;AACA;;AACA;;AACA;;AACA;;AAWA,MAAMA,iCAAiC,GAAG,CACxCC,IADwC,EAExCC,WAFwC,EAGxCC,OAAyB,GAAG,EAHY,KAIrC;EACH,IAAI;IACF,MAAM;MAAEC;IAAF,IAAgBC,OAAO,CAAC,cAAD,CAA7B;;IACA,MAAM;MAAEC,KAAF;MAASC;IAAT,IAAwBJ,OAA9B;IACA,OACE,IAAAK,kCAAA,EAAiBP,IAAjB,EAAuBG,SAAvB,KACA,IAAAK,gBAAA,EAAQP,WAAR,EAAqBD,IAAI,CAACS,KAAL,CAAWR,WAAhC,EAA6CK,UAA7C,EAAyDD,KAAzD,CAFF;EAID,CAPD,CAOE,OAAOK,KAAP,EAAc;IACd,MAAM,IAAAC,sCAAA,EAA+BD,KAA/B,CAAN;EACD;AACF,CAfD;;AAiBA,MAAME,yBAAyB,GAC7BC,QADgC,IAMhC,SAASC,uBAAT,CAAiCb,WAAjC,EAA8Cc,YAA9C,EAA4D;EAC1D,OAAOF,QAAQ,CAACG,OAAT,CAAkBhB,IAAD,IACtBD,iCAAiC,CAACC,IAAD,EAAOC,WAAP,EAAoBc,YAApB,CAD5B,CAAP;AAGD,CAVH;;AAYA,MAAME,gBAAgB,GAAIhB,WAAD,IACtB,6CAA4CiB,MAAM,CAACjB,WAAD,CAAc,GADnE;;AAEA,MAAMkB,eAAe,GAAIlB,WAAD,IACrB,+CAA8CiB,MAAM,CAACjB,WAAD,CAAc,EADrE;;AAGA,MAAM;EAAEmB,KAAF;EAASC,QAAT;EAAmBC,OAAnB;EAA4BC,UAA5B;EAAwCC,MAAxC;EAAgDC;AAAhD,IAA8D,IAAAC,wBAAA,EAClEd,yBADkE,EAElEO,eAFkE,EAGlEF,gBAHkE,CAApE;;AAeO,MAAMU,4BAA4B,GACvCd,QAD0C,KAEZ;EAC9Be,oBAAoB,EAAER,KAAK,CAACP,QAAD,CADG;EAE9BgB,uBAAuB,EAAER,QAAQ,CAACR,QAAD,CAFH;EAG9BiB,sBAAsB,EAAER,OAAO,CAACT,QAAD,CAHD;EAI9BD,yBAAyB,EAAEW,UAAU,CAACV,QAAD,CAJP;EAK9BkB,qBAAqB,EAAEP,MAAM,CAACX,QAAD,CALC;EAM9BmB,wBAAwB,EAAEP,SAAS,CAACZ,QAAD;AANL,CAFY,CAArC"}