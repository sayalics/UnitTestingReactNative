{"version":3,"file":"unsafeType.js","names":["UNSAFE_getByType","instance","getByTypeFn","type","findByType","error","ErrorWithStack","prepareErrorMessage","UNSAFE_getAllByType","getAllByTypeFn","results","findAllByType","length","UNSAFE_queryByType","queryByTypeFn","createQueryByError","UNSAFE_queryAllByType","bindUnsafeByTypeQueries"],"sources":["../../src/queries/unsafeType.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport * as React from 'react';\nimport { ErrorWithStack, prepareErrorMessage } from '../helpers/errors';\nimport { createQueryByError } from '../helpers/errors';\n\nconst UNSAFE_getByType = (\n  instance: ReactTestInstance\n): ((type: React.ComponentType<any>) => ReactTestInstance) =>\n  function getByTypeFn(type: React.ComponentType<any>) {\n    try {\n      return instance.findByType(type);\n    } catch (error) {\n      throw new ErrorWithStack(prepareErrorMessage(error), getByTypeFn);\n    }\n  };\n\nconst UNSAFE_getAllByType = (\n  instance: ReactTestInstance\n): ((type: React.ComponentType<any>) => Array<ReactTestInstance>) =>\n  function getAllByTypeFn(type: React.ComponentType<any>) {\n    const results = instance.findAllByType(type);\n    if (results.length === 0) {\n      throw new ErrorWithStack('No instances found', getAllByTypeFn);\n    }\n    return results;\n  };\n\nconst UNSAFE_queryByType = (\n  instance: ReactTestInstance\n): ((type: React.ComponentType<any>) => ReactTestInstance | null) =>\n  function queryByTypeFn(type: React.ComponentType<any>) {\n    try {\n      return UNSAFE_getByType(instance)(type);\n    } catch (error) {\n      return createQueryByError(error, queryByTypeFn);\n    }\n  };\n\nconst UNSAFE_queryAllByType =\n  (\n    instance: ReactTestInstance\n  ): ((type: React.ComponentType<any>) => Array<ReactTestInstance>) =>\n  (type: React.ComponentType<any>) => {\n    try {\n      return UNSAFE_getAllByType(instance)(type);\n    } catch (error) {\n      return [];\n    }\n  };\n\n// Unsafe aliases\nexport type UnsafeByTypeQueries = {\n  UNSAFE_getByType: <P>(type: React.ComponentType<P>) => ReactTestInstance;\n  UNSAFE_getAllByType: <P>(\n    type: React.ComponentType<P>\n  ) => Array<ReactTestInstance>;\n  UNSAFE_queryByType: <P>(\n    type: React.ComponentType<P>\n  ) => ReactTestInstance | null;\n  UNSAFE_queryAllByType: <P>(\n    type: React.ComponentType<P>\n  ) => Array<ReactTestInstance>;\n};\n\n// TODO: migrate to makeQueries pattern\nexport const bindUnsafeByTypeQueries = (\n  instance: ReactTestInstance\n): UnsafeByTypeQueries => ({\n  UNSAFE_getByType: UNSAFE_getByType(instance),\n  UNSAFE_getAllByType: UNSAFE_getAllByType(instance),\n  UNSAFE_queryByType: UNSAFE_queryByType(instance),\n  UNSAFE_queryAllByType: UNSAFE_queryAllByType(instance),\n});\n"],"mappings":";;;;;;;AAEA;;AAGA,MAAMA,gBAAgB,GACpBC,QADuB,IAGvB,SAASC,WAAT,CAAqBC,IAArB,EAAqD;EACnD,IAAI;IACF,OAAOF,QAAQ,CAACG,UAAT,CAAoBD,IAApB,CAAP;EACD,CAFD,CAEE,OAAOE,KAAP,EAAc;IACd,MAAM,IAAIC,sBAAJ,CAAmB,IAAAC,2BAAA,EAAoBF,KAApB,CAAnB,EAA+CH,WAA/C,CAAN;EACD;AACF,CATH;;AAWA,MAAMM,mBAAmB,GACvBP,QAD0B,IAG1B,SAASQ,cAAT,CAAwBN,IAAxB,EAAwD;EACtD,MAAMO,OAAO,GAAGT,QAAQ,CAACU,aAAT,CAAuBR,IAAvB,CAAhB;;EACA,IAAIO,OAAO,CAACE,MAAR,KAAmB,CAAvB,EAA0B;IACxB,MAAM,IAAIN,sBAAJ,CAAmB,oBAAnB,EAAyCG,cAAzC,CAAN;EACD;;EACD,OAAOC,OAAP;AACD,CATH;;AAWA,MAAMG,kBAAkB,GACtBZ,QADyB,IAGzB,SAASa,aAAT,CAAuBX,IAAvB,EAAuD;EACrD,IAAI;IACF,OAAOH,gBAAgB,CAACC,QAAD,CAAhB,CAA2BE,IAA3B,CAAP;EACD,CAFD,CAEE,OAAOE,KAAP,EAAc;IACd,OAAO,IAAAU,0BAAA,EAAmBV,KAAnB,EAA0BS,aAA1B,CAAP;EACD;AACF,CATH;;AAWA,MAAME,qBAAqB,GAEvBf,QADF,IAGCE,IAAD,IAAoC;EAClC,IAAI;IACF,OAAOK,mBAAmB,CAACP,QAAD,CAAnB,CAA8BE,IAA9B,CAAP;EACD,CAFD,CAEE,OAAOE,KAAP,EAAc;IACd,OAAO,EAAP;EACD;AACF,CAVH,C,CAYA;;;AAcA;AACO,MAAMY,uBAAuB,GAClChB,QADqC,KAEZ;EACzBD,gBAAgB,EAAEA,gBAAgB,CAACC,QAAD,CADT;EAEzBO,mBAAmB,EAAEA,mBAAmB,CAACP,QAAD,CAFf;EAGzBY,kBAAkB,EAAEA,kBAAkB,CAACZ,QAAD,CAHb;EAIzBe,qBAAqB,EAAEA,qBAAqB,CAACf,QAAD;AAJnB,CAFY,CAAhC"}