{"version":3,"file":"labelText.js","names":["queryAllByLabelText","instance","queryAllByLabelTextFn","text","findAll","node","type","matchStringProp","props","accessibilityLabel","getMultipleError","labelText","String","getMissingError","getBy","getAllBy","queryBy","queryAllBy","findBy","findAllBy","makeQueries","bindByLabelTextQueries","getByLabelText","getAllByLabelText","queryByLabelText","findByLabelText","findAllByLabelText"],"sources":["../../src/queries/labelText.ts"],"sourcesContent":["import type { ReactTestInstance } from 'react-test-renderer';\nimport { TextMatch } from '../matches';\nimport { matchStringProp } from '../helpers/matchers/matchStringProp';\nimport { makeQueries } from './makeQueries';\nimport type {\n  FindAllByQuery,\n  FindByQuery,\n  GetAllByQuery,\n  GetByQuery,\n  QueryAllByQuery,\n  QueryByQuery,\n} from './makeQueries';\n\nconst queryAllByLabelText = (\n  instance: ReactTestInstance\n): ((text: TextMatch) => Array<ReactTestInstance>) =>\n  function queryAllByLabelTextFn(text) {\n    return instance.findAll(\n      (node) =>\n        typeof node.type === 'string' &&\n        matchStringProp(node.props.accessibilityLabel, text)\n    );\n  };\n\nconst getMultipleError = (labelText: TextMatch) =>\n  `Found multiple elements with accessibilityLabel: ${String(labelText)} `;\nconst getMissingError = (labelText: TextMatch) =>\n  `Unable to find an element with accessibilityLabel: ${String(labelText)}`;\n\nconst { getBy, getAllBy, queryBy, queryAllBy, findBy, findAllBy } = makeQueries(\n  queryAllByLabelText,\n  getMissingError,\n  getMultipleError\n);\n\nexport type ByLabelTextQueries = {\n  getByLabelText: GetByQuery<TextMatch>;\n  getAllByLabelText: GetAllByQuery<TextMatch>;\n  queryByLabelText: QueryByQuery<TextMatch>;\n  queryAllByLabelText: QueryAllByQuery<TextMatch>;\n  findByLabelText: FindByQuery<TextMatch>;\n  findAllByLabelText: FindAllByQuery<TextMatch>;\n};\n\nexport const bindByLabelTextQueries = (\n  instance: ReactTestInstance\n): ByLabelTextQueries => ({\n  getByLabelText: getBy(instance),\n  getAllByLabelText: getAllBy(instance),\n  queryByLabelText: queryBy(instance),\n  queryAllByLabelText: queryAllBy(instance),\n  findByLabelText: findBy(instance),\n  findAllByLabelText: findAllBy(instance),\n});\n"],"mappings":";;;;;;;AAEA;;AACA;;AAUA,MAAMA,mBAAmB,GACvBC,QAD0B,IAG1B,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;EACnC,OAAOF,QAAQ,CAACG,OAAT,CACJC,IAAD,IACE,OAAOA,IAAI,CAACC,IAAZ,KAAqB,QAArB,IACA,IAAAC,gCAAA,EAAgBF,IAAI,CAACG,KAAL,CAAWC,kBAA3B,EAA+CN,IAA/C,CAHG,CAAP;AAKD,CATH;;AAWA,MAAMO,gBAAgB,GAAIC,SAAD,IACtB,oDAAmDC,MAAM,CAACD,SAAD,CAAY,GADxE;;AAEA,MAAME,eAAe,GAAIF,SAAD,IACrB,sDAAqDC,MAAM,CAACD,SAAD,CAAY,EAD1E;;AAGA,MAAM;EAAEG,KAAF;EAASC,QAAT;EAAmBC,OAAnB;EAA4BC,UAA5B;EAAwCC,MAAxC;EAAgDC;AAAhD,IAA8D,IAAAC,wBAAA,EAClEpB,mBADkE,EAElEa,eAFkE,EAGlEH,gBAHkE,CAApE;;AAeO,MAAMW,sBAAsB,GACjCpB,QADoC,KAEZ;EACxBqB,cAAc,EAAER,KAAK,CAACb,QAAD,CADG;EAExBsB,iBAAiB,EAAER,QAAQ,CAACd,QAAD,CAFH;EAGxBuB,gBAAgB,EAAER,OAAO,CAACf,QAAD,CAHD;EAIxBD,mBAAmB,EAAEiB,UAAU,CAAChB,QAAD,CAJP;EAKxBwB,eAAe,EAAEP,MAAM,CAACjB,QAAD,CALC;EAMxByB,kBAAkB,EAAEP,SAAS,CAAClB,QAAD;AANL,CAFY,CAA/B"}